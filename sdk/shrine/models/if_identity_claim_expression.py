# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class IfIdentityClaimExpression(Model):
    """IfIdentityClaimExpression.

    :param claim_type:
    :type claim_type: str
    :param claim_value_type:
    :type claim_value_type: str
    :param claim_issuer:
    :type claim_issuer: str
    :param claim_original_issuer:
    :type claim_original_issuer: str
    :param operator: Possible values include: 'Undefined',
     'EqualsCaseSensitive', 'EqualsCaseInsensitive', 'NotEqualsCaseSensitive',
     'NotEqualsCaseInsensitive', 'ContainsCaseSensitive',
     'NotPresentOrNotContainsCaseSensitive'
    :type operator: str or ~shrine.models.enum
    :param value:
    :type value: str
    """

    _validation = {
        'claim_type': {'required': True},
        'claim_value_type': {'required': True},
        'operator': {'required': True},
    }

    _attribute_map = {
        'claim_type': {'key': 'claimType', 'type': 'str'},
        'claim_value_type': {'key': 'claimValueType', 'type': 'str'},
        'claim_issuer': {'key': 'claimIssuer', 'type': 'str'},
        'claim_original_issuer': {'key': 'claimOriginalIssuer', 'type': 'str'},
        'operator': {'key': 'operator', 'type': 'str'},
        'value': {'key': 'value', 'type': 'str'},
    }

    def __init__(self, claim_type, claim_value_type, operator, claim_issuer=None, claim_original_issuer=None, value=None):
        super(IfIdentityClaimExpression, self).__init__()
        self.claim_type = claim_type
        self.claim_value_type = claim_value_type
        self.claim_issuer = claim_issuer
        self.claim_original_issuer = claim_original_issuer
        self.operator = operator
        self.value = value
