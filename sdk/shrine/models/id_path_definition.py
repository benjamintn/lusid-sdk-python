# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class IdPathDefinition(Model):
    """IdPathDefinition.

    :param code_only_id_path_definition:
    :type code_only_id_path_definition:
     ~shrine.models.CodeOnlyIdPathDefinition
    :param full_id_path_definition:
    :type full_id_path_definition: ~shrine.models.FullIdPathDefinition
    :param scope_and_code_id_path_definition:
    :type scope_and_code_id_path_definition:
     ~shrine.models.ScopeAndCodeIdPathDefinition
    :param scope_id_path_definition:
    :type scope_id_path_definition: ~shrine.models.ScopeIdPathDefinition
    :param complex_key_id_path_definition:
    :type complex_key_id_path_definition:
     ~shrine.models.ComplexKeyIdPathDefinition
    :param category: Possible values include: 'None', 'Identifier', 'Quality',
     'Licence'
    :type category: str or ~shrine.models.enum
    :param actions:
    :type actions: list[~shrine.models.ActionId]
    :param name:
    :type name: str
    :param description:
    :type description: str
    """

    _attribute_map = {
        'code_only_id_path_definition': {'key': 'codeOnlyIdPathDefinition', 'type': 'CodeOnlyIdPathDefinition'},
        'full_id_path_definition': {'key': 'fullIdPathDefinition', 'type': 'FullIdPathDefinition'},
        'scope_and_code_id_path_definition': {'key': 'scopeAndCodeIdPathDefinition', 'type': 'ScopeAndCodeIdPathDefinition'},
        'scope_id_path_definition': {'key': 'scopeIdPathDefinition', 'type': 'ScopeIdPathDefinition'},
        'complex_key_id_path_definition': {'key': 'complexKeyIdPathDefinition', 'type': 'ComplexKeyIdPathDefinition'},
        'category': {'key': 'category', 'type': 'str'},
        'actions': {'key': 'actions', 'type': '[ActionId]'},
        'name': {'key': 'name', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
    }

    def __init__(self, code_only_id_path_definition=None, full_id_path_definition=None, scope_and_code_id_path_definition=None, scope_id_path_definition=None, complex_key_id_path_definition=None, category=None, actions=None, name=None, description=None):
        super(IdPathDefinition, self).__init__()
        self.code_only_id_path_definition = code_only_id_path_definition
        self.full_id_path_definition = full_id_path_definition
        self.scope_and_code_id_path_definition = scope_and_code_id_path_definition
        self.scope_id_path_definition = scope_id_path_definition
        self.complex_key_id_path_definition = complex_key_id_path_definition
        self.category = category
        self.actions = actions
        self.name = name
        self.description = description
