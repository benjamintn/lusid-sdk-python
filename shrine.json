{"swagger":"2.0","info":{"version":"v0","title":"FINBOURNE Shrine API","termsOfService":"Not to be used without explicit authorisation from FINBOURNE","contact":{"name":"FINBOURNE Technology","url":"https://www.finbourne.com","email":"info@finbourne.com"},"x-logo":{"url":"https://content.finbourne.com/FINBOURNE.png","backgroundColor":"#415464"}},"paths":{"/api/me":{"get":{"tags":["Me"],"summary":"GetOwnPolicies","description":"Gets all Policies for the current user","operationId":"ApiMeGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"applications","in":"query","description":"Optional. Filter on the applications that the policies apply to","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","uniqueItems":false},{"name":"asAt","in":"query","description":"Optional. The AsAt date time of the data","required":false,"type":"string","format":"date-time"},{"name":"sortBy","in":"query","description":"Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","uniqueItems":false},{"name":"start","in":"query","description":"Optional. When paginating, skip this number of results","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Optional. When paginating, limit the number of returned results to this many.","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","description":"Optional. Expression to filter the result set","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/AttachedPolicyDefinitionResponse"}},"examples":{"application/json":[{"sourceRole":{"scope":"default","code":"example-source-role"},"roleHierarchyIndex":50,"description":"Example policy demonstrating the granting of access to some resources","applications":["LUSID"],"policyType":"Entitlement","id":{"scope":"default","code":"official-portfolios-read-only"},"grant":"Allow","paths":[{"idPathDefinition":{"scopeIdPathDefinition":{"scope":"official"},"category":"Identifier","actions":[{"scope":"default","activity":"Read","entity":"Portfolio"},{"scope":"default","activity":"Aggregate","entity":"Portfolio"}],"name":"access-official-scope","description":"Allow readonly access to the 'official' scope"}}],"for":[{"effectiveRange":{"from":"2015-12-25T00:00:00+00:00","to":"2020-12-25T00:00:00+00:00"}},{"asAtRangeForSpec":{"from":{"dateTimeOffset":"2018-01-01T00:00:00+00:00"},"to":{"value":"AsAt=Latest","dateTimeOffset":"0001-01-01T00:00:00+00:00"}}}],"if":[{"ifRequestHeaderExpression":{"headerName":"organisation.specific.group.header","operator":"EqualsCaseInsensitive","value":"special-group"}}],"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"}}]}}}},"post":{"tags":["Me"],"summary":"Evaluate","description":"Given a dictionary of evaluation requests (keyed by any arbitrary correlation identifier), each will be evaluated according to the current user's policies (deduced from the provided OAuth token).","operationId":"ApiMePost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"evaluations","in":"body","description":"A dictionary of evaluations, keyed using any arbitrary correlation id (it will be returned with the response for that evaluation).","required":true,"schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/EvaluationRequest"}}},{"name":"applications","in":"query","description":"Optional. The application type of the roles and policies to use when evaluating.","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","uniqueItems":false},{"name":"asAt","in":"query","description":"Optional. The requested AsAt date of the entitlements","required":false,"type":"string","format":"date-time"}],"responses":{"200":{"description":"Success","schema":{"type":"object","additionalProperties":{"$ref":"#/definitions/EvaluationResponse"}},"examples":{"application/json":{"result":"DeniedAsLicenceRequired","detailedMessage":"Access was denied because user is missing licence 'A/B'"}}}}}},"/api/policies":{"get":{"tags":["Policies"],"summary":"ListPolicies","description":"Gets all Policies in a scope","operationId":"ApiPoliciesGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The requested scope","required":false,"type":"string"},{"name":"asAt","in":"query","description":"Optional. The AsAt date time of the data","required":false,"type":"string","format":"date-time"},{"name":"sortBy","in":"query","description":"Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","uniqueItems":false},{"name":"start","in":"query","description":"Optional. When paginating, skip this number of results","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Optional. When paginating, limit the number of returned results to this many.","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","description":"Optional. Expression to filter the result set","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyResponse"}},"examples":{"application/json":[{"id":{"scope":"default","code":"official-portfolios-read-only"},"description":"Example policy demonstrating the granting of access to some resources","applications":["LUSID"],"grant":"Allow","paths":[{"idPathDefinition":{"scopeIdPathDefinition":{"scope":"official"},"category":"Identifier","actions":[{"scope":"default","activity":"Read","entity":"Portfolio"},{"scope":"default","activity":"Aggregate","entity":"Portfolio"}],"name":"access-official-scope","description":"Allow readonly access to the 'official' scope"}}],"for":[{"effectiveRange":{"from":"2015-12-25T00:00:00+00:00","to":"2020-12-25T00:00:00+00:00"}},{"asAtRangeForSpec":{"from":{"dateTimeOffset":"2018-01-01T00:00:00+00:00"},"to":{"value":"AsAt=Latest","dateTimeOffset":"0001-01-01T00:00:00+00:00"}}}],"if":[{"ifRequestHeaderExpression":{"headerName":"organisation.specific.group.header","operator":"EqualsCaseInsensitive","value":"special-group"}}],"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"}}]}}}},"post":{"tags":["Policies"],"summary":"CreatePolicy","description":"Creates a Policy","operationId":"ApiPoliciesPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"creation","in":"body","description":"The definition of the Policy","required":true,"schema":{"$ref":"#/definitions/PolicyCreationRequest"}}],"responses":{"201":{"description":"Policy Collection response object","schema":{"$ref":"#/definitions/PolicyExamples.PolicyResponse"}}}}},"/api/policies/{code}":{"get":{"tags":["Policies"],"summary":"GetPolicy","description":"Gets an identified Policy","operationId":"ApiPoliciesByCodeGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"code","in":"path","description":"The code of the Policy","required":true,"type":"string"},{"name":"asAt","in":"query","description":"Optional. The AsAt date time of the data","required":false,"type":"string","format":"date-time"},{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The scope of the Policy","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/PolicyResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"official-portfolios-read-only"},"description":"Example policy demonstrating the granting of access to some resources","applications":["LUSID"],"grant":"Allow","paths":[{"idPathDefinition":{"scopeIdPathDefinition":{"scope":"official"},"category":"Identifier","actions":[{"scope":"default","activity":"Read","entity":"Portfolio"},{"scope":"default","activity":"Aggregate","entity":"Portfolio"}],"name":"access-official-scope","description":"Allow readonly access to the 'official' scope"}}],"for":[{"effectiveRange":{"from":"2015-12-25T00:00:00+00:00","to":"2020-12-25T00:00:00+00:00"}},{"asAtRangeForSpec":{"from":{"dateTimeOffset":"2018-01-01T00:00:00+00:00"},"to":{"value":"AsAt=Latest","dateTimeOffset":"0001-01-01T00:00:00+00:00"}}}],"if":[{"ifRequestHeaderExpression":{"headerName":"organisation.specific.group.header","operator":"EqualsCaseInsensitive","value":"special-group"}}],"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"}}}}}},"put":{"tags":["Policies"],"summary":"UpdatePolicy","description":"Updates a Policy","operationId":"ApiPoliciesByCodePut","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"code","in":"path","description":"The code of the Policy","required":true,"type":"string"},{"name":"update","in":"body","description":"The updated definition of the Policy","required":true,"schema":{"$ref":"#/definitions/PolicyUpdateRequest"}},{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The scope of the Policy","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/PolicyResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"official-portfolios-read-only"},"description":"Example policy demonstrating the granting of access to some resources","applications":["LUSID"],"grant":"Allow","paths":[{"idPathDefinition":{"scopeIdPathDefinition":{"scope":"official"},"category":"Identifier","actions":[{"scope":"default","activity":"Read","entity":"Portfolio"},{"scope":"default","activity":"Aggregate","entity":"Portfolio"}],"name":"access-official-scope","description":"Allow readonly access to the 'official' scope"}}],"for":[{"effectiveRange":{"from":"2015-12-25T00:00:00+00:00","to":"2020-12-25T00:00:00+00:00"}},{"asAtRangeForSpec":{"from":{"dateTimeOffset":"2018-01-01T00:00:00+00:00"},"to":{"value":"AsAt=Latest","dateTimeOffset":"0001-01-01T00:00:00+00:00"}}}],"if":[{"ifRequestHeaderExpression":{"headerName":"organisation.specific.group.header","operator":"EqualsCaseInsensitive","value":"special-group"}}],"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"}}}}}},"delete":{"tags":["Policies"],"summary":"DeletePolicy","description":"Deletes an identified Policy","operationId":"ApiPoliciesByCodeDelete","consumes":[],"produces":[],"parameters":[{"name":"code","in":"path","description":"The code of the Policy","required":true,"type":"string"},{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The scope of the Policy","required":false,"type":"string"}],"responses":{"204":{"description":"Success"}}}},"/api/policycollections":{"get":{"tags":["PolicyCollections"],"summary":"ListPolicyCollections","description":"Gets all PolicyCollections in a scope","operationId":"ApiPolicycollectionsGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The requested scope","required":false,"type":"string"},{"name":"asAt","in":"query","description":"Optional. The AsAt date time of the data","required":false,"type":"string","format":"date-time"},{"name":"sortBy","in":"query","description":"Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","uniqueItems":false},{"name":"start","in":"query","description":"Optional. When paginating, skip this number of results","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Optional. When paginating, limit the number of returned results to this many.","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","description":"Optional. Expression to filter the result set","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyCollectionResponse"}},"examples":{"application/json":[{"id":{"scope":"default","code":"organisation-wide-policies"},"policyIds":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"attributes":{},"collectionIds":[{"scope":"default","code":"CompanyEmployeeAccess"}]}]}}}},"post":{"tags":["PolicyCollections"],"summary":"CreatePolicyCollection","description":"Creates a PolicyCollection","operationId":"ApiPolicycollectionsPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"creation","in":"body","description":"The definition of the PolicyCollection","required":true,"schema":{"$ref":"#/definitions/PolicyCollectionCreationRequest"}}],"responses":{"201":{"description":"Policy Collection response object","schema":{"$ref":"#/definitions/PolicyCollectionExamples.PolicyCollectionResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"organisation-wide-policies"},"policyIds":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"attributes":{},"collectionIds":[{"scope":"default","code":"CompanyEmployeeAccess"}]}}}}}},"/api/policycollections/{code}":{"get":{"tags":["PolicyCollections"],"summary":"GetPolicyCollection","description":"Gets an identified PolicyCollection","operationId":"ApiPolicycollectionsByCodeGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"code","in":"path","description":"The code of the PolicyCollection","required":true,"type":"string"},{"name":"asAt","in":"query","description":"Optional. The AsAt date time of the data","required":false,"type":"string","format":"date-time"},{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The scope of the PolicyCollection","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/PolicyCollectionResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"organisation-wide-policies"},"policyIds":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"attributes":{},"collectionIds":[{"scope":"default","code":"CompanyEmployeeAccess"}]}}}}},"put":{"tags":["PolicyCollections"],"summary":"UpdatePolicyCollection","description":"Updates a PolicyCollection","operationId":"ApiPolicycollectionsByCodePut","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"code","in":"path","description":"The code of the PolicyCollection","required":true,"type":"string"},{"name":"update","in":"body","description":"The updated definition of the PolicyCollection","required":true,"schema":{"$ref":"#/definitions/PolicyCollectionUpdateRequest"}},{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The scope of the PolicyCollection","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/PolicyCollectionResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"organisation-wide-policies"},"policyIds":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"attributes":{},"collectionIds":[{"scope":"default","code":"CompanyEmployeeAccess"}]}}}}},"delete":{"tags":["PolicyCollections"],"summary":"DeletePolicyCollection","description":"Deletes an identified PolicyCollection","operationId":"ApiPolicycollectionsByCodeDelete","consumes":[],"produces":[],"parameters":[{"name":"code","in":"path","description":"The code of the PolicyCollection","required":true,"type":"string"},{"name":"scope","in":"query","description":"Optional. Will use the default scope if not provided. The scope of the PolicyCollection","required":false,"type":"string"}],"responses":{"204":{"description":"Success"}}}},"/api/roles":{"get":{"tags":["Roles"],"summary":"ListRoles","description":"Gets all Roles in a scope","operationId":"ApiRolesGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"scope","in":"query","description":"Optional. Will use all scopes if not supplied. The requested scope","required":false,"type":"string"},{"name":"asAt","in":"query","description":"Optional. The AsAt date time of the data","required":false,"type":"string","format":"date-time"},{"name":"sortBy","in":"query","description":"Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi","uniqueItems":false},{"name":"start","in":"query","description":"Optional. When paginating, skip this number of results","required":false,"type":"integer","format":"int32"},{"name":"limit","in":"query","description":"Optional. When paginating, limit the number of returned results to this many.","required":false,"type":"integer","format":"int32"},{"name":"filter","in":"query","description":"Optional. Expression to filter the result set","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/RoleResponse"}},"examples":{"application/json":[{"id":{"scope":"default","code":"DevelopersRole"},"roleHierarchyIndex":50,"description":"An example Role to identify my Developers","resource":{"policyIdRoleResource":{"policyIdentifiers":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"policyCollectionIdentifiers":[{"scope":"default","code":"CompanyEmployeeAccess"}]}},"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"},"permission":"Read"}]}}}},"post":{"tags":["Roles"],"summary":"CreateRole","description":"Creates a Role","operationId":"ApiRolesPost","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"creation","in":"body","description":"The definition of the Role","required":true,"schema":{"$ref":"#/definitions/RoleCreationRequest"}}],"responses":{"201":{"description":"Role response object","schema":{"$ref":"#/definitions/RoleExamples.RoleResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"DevelopersRole"},"roleHierarchyIndex":50,"description":"An example Role to identify my Developers","resource":{"policyIdRoleResource":{"policyIdentifiers":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"policyCollectionIdentifiers":[{"scope":"default","code":"CompanyEmployeeAccess"}]}},"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"},"permission":"Read"}}}}}},"/api/roles/{code}":{"get":{"tags":["Roles"],"summary":"GetRole","description":"Gets an identified Role","operationId":"ApiRolesByCodeGet","consumes":[],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"code","in":"path","description":"The code of the Role","required":true,"type":"string"},{"name":"asAt","in":"query","description":"Optional. The AsAt date time of the data","required":false,"type":"string","format":"date-time"},{"name":"scope","in":"query","description":"Optional. Will use default scope if not supplied. The scope of the Role","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/RoleResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"DevelopersRole"},"roleHierarchyIndex":50,"description":"An example Role to identify my Developers","resource":{"policyIdRoleResource":{"policyIdentifiers":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"policyCollectionIdentifiers":[{"scope":"default","code":"CompanyEmployeeAccess"}]}},"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"},"permission":"Read"}}}}},"put":{"tags":["Roles"],"summary":"UpdateRole","description":"Updates a Role","operationId":"ApiRolesByCodePut","consumes":["application/json-patch+json","application/json","text/json","application/*+json"],"produces":["text/plain","application/json","text/json"],"parameters":[{"name":"code","in":"path","description":"The code of the Role","required":true,"type":"string"},{"name":"update","in":"body","description":"The updated definition of the Role","required":true,"schema":{"$ref":"#/definitions/RoleUpdateRequest"}},{"name":"scope","in":"query","description":"&gt;Optional. Will use default scope if not supplied. The scope of the Role","required":false,"type":"string"},{"name":"beforeScope","in":"query","description":"Optional. The scope of the Role. Will use default scope if not supplied.","required":false,"type":"string"},{"name":"beforeCode","in":"query","description":"Optional. The code of the Role","required":false,"type":"string"},{"name":"afterScope","in":"query","description":"Optional. The scope of the Role. Will use default scope if not supplied.","required":false,"type":"string"},{"name":"afterCode","in":"query","description":"Optional. The code of the Role","required":false,"type":"string"}],"responses":{"200":{"description":"Success","schema":{"$ref":"#/definitions/RoleResponse"},"examples":{"application/json":{"id":{"scope":"default","code":"DevelopersRole"},"roleHierarchyIndex":50,"description":"An example Role to identify my Developers","resource":{"policyIdRoleResource":{"policyIdentifiers":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"policyCollectionIdentifiers":[{"scope":"default","code":"CompanyEmployeeAccess"}]}},"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"},"permission":"Read"}}}}},"delete":{"tags":["Roles"],"summary":"DeleteRole","description":"Deletes an identified Role","operationId":"ApiRolesByCodeDelete","consumes":[],"produces":[],"parameters":[{"name":"code","in":"path","description":"The code of the Role","required":true,"type":"string"},{"name":"scope","in":"query","description":"&gt;Optional. Will use default scope if not supplied. The scope of the Role","required":false,"type":"string"}],"responses":{"204":{"description":"Success"}}}}},"definitions":{"AttachedPolicyDefinitionResponse":{"type":"object","properties":{"sourceRole":{"$ref":"#/definitions/RoleId"},"roleHierarchyIndex":{"format":"int32","type":"integer"},"description":{"type":"string"},"applications":{"uniqueItems":false,"type":"array","items":{"type":"string"}},"meta":{"type":"object","properties":{"Undefined":{"type":"string"},"UsageToken":{"type":"string"},"DocumentType":{"type":"string"}}},"policyType":{"enum":["Undefined","Entitlement","Licence"],"type":"string"},"id":{"$ref":"#/definitions/PolicyId"},"grant":{"enum":["Undefined","Allow","Deny"],"type":"string"},"paths":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PathDefinition"}},"for":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ForSpec"}},"if":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/IfExpression"}},"when":{"$ref":"#/definitions/WhenSpec"},"how":{"$ref":"#/definitions/HowSpec"}}},"RoleId":{"required":["code"],"type":"object","properties":{"scope":{"maxLength":100,"minLength":3,"type":"string"},"code":{"maxLength":50,"minLength":3,"type":"string"}}},"PolicyId":{"required":["code"],"type":"object","properties":{"scope":{"maxLength":100,"minLength":3,"type":"string"},"code":{"maxLength":50,"minLength":3,"type":"string"}}},"PathDefinition":{"type":"object","properties":{"attributePathDefinition":{"$ref":"#/definitions/AttributePathDefinition"},"idPathDefinition":{"$ref":"#/definitions/IdPathDefinition"},"matchAllPathDefinition":{"$ref":"#/definitions/MatchAllPathDefinition"},"policyPathDefinition":{"$ref":"#/definitions/PolicyPathDefinition"}}},"ForSpec":{"type":"object","properties":{"asAtRangeForSpec":{"$ref":"#/definitions/AsAtRangeForSpec"},"asAtRelative":{"$ref":"#/definitions/AsAtRelative"},"effectiveDateHasQuality":{"$ref":"#/definitions/EffectiveDateHasQuality"},"effectiveDateRelative":{"$ref":"#/definitions/EffectiveDateRelative"},"effectiveRange":{"$ref":"#/definitions/EffectiveRange"}}},"IfExpression":{"type":"object","properties":{"ifRequestHeaderExpression":{"$ref":"#/definitions/IfRequestHeaderExpression"},"ifIdentityClaimExpression":{"$ref":"#/definitions/IfIdentityClaimExpression"},"ifIdentityScopeExpression":{"$ref":"#/definitions/IfIdentityScopeExpression"}}},"WhenSpec":{"type":"object","properties":{"activate":{"format":"date-time","type":"string"},"deactivate":{"format":"date-time","type":"string"}}},"HowSpec":{"type":"object","properties":{"type":{"type":"string"},"parameters":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/KeyValuePair<String, String>"}}}},"AttributePathDefinition":{"type":"object","properties":{"expressions":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/AttributeExpression"}},"category":{"enum":["None","Identifier","Quality","Licence"],"type":"string"},"actions":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ActionId"}},"name":{"type":"string"},"description":{"type":"string"}}},"IdPathDefinition":{"type":"object","properties":{"codeOnlyIdPathDefinition":{"$ref":"#/definitions/CodeOnlyIdPathDefinition"},"fullIdPathDefinition":{"$ref":"#/definitions/FullIdPathDefinition"},"scopeAndCodeIdPathDefinition":{"$ref":"#/definitions/ScopeAndCodeIdPathDefinition"},"scopeIdPathDefinition":{"$ref":"#/definitions/ScopeIdPathDefinition"},"complexKeyIdPathDefinition":{"$ref":"#/definitions/ComplexKeyIdPathDefinition"},"category":{"enum":["None","Identifier","Quality","Licence"],"type":"string"},"actions":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ActionId"}},"name":{"type":"string"},"description":{"type":"string"}}},"MatchAllPathDefinition":{"type":"object","properties":{"category":{"enum":["None","Identifier","Quality","Licence"],"type":"string"},"actions":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ActionId"}},"name":{"type":"string"},"description":{"type":"string"}}},"PolicyPathDefinition":{"type":"object","properties":{"idResourceReferenceType":{"enum":["Undefined","Scope","Code","ScopeAndCode","Licence","FullPath","ComplexKey"],"type":"string"},"reference":{"type":"string"},"restrictedPathSet":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PathDefinition"}},"category":{"enum":["None","Identifier","Quality","Licence"],"type":"string"},"actions":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ActionId"}},"name":{"type":"string"},"description":{"type":"string"}}},"AsAtRangeForSpec":{"type":"object","properties":{"from":{"$ref":"#/definitions/AsAtPredicateContract"},"to":{"$ref":"#/definitions/AsAtPredicateContract"}}},"AsAtRelative":{"type":"object","properties":{"date":{"enum":["Undefined","Now","FirstOfMonth","FirstBusinessDayOfTheMonth","LastDayOfTheMonth","LastBusinessDayOfMonth","FirstDayOfYear","LastDayOfYear"],"type":"string"},"adjustment":{"format":"int32","type":"integer"},"unit":{"enum":["Undefined","Minute","Hour","Day","BusinessDay","Weeks","Months","Years"],"type":"string"},"relativeToDateTime":{"enum":["Undefined","BeforeOrOn","Before","OnDayOf","AfterOrOn","After","Exactly"],"type":"string"}}},"EffectiveDateHasQuality":{"type":"object","properties":{"quality":{"enum":["Undefined","IsFirstDayOfAnyMonth","IsLastDayOfAnyMonth","IsBusinessDayOfAnyMonth","IsFirstDayOfTheCurrentMonth","IsLastDayOfTheCurrentMonth","IsBusinessDayOfTheCurrentMonth","IsBeforeMidday","IsBefore5pm","IsAfter5pm"],"type":"string"}}},"EffectiveDateRelative":{"type":"object","properties":{"date":{"enum":["Undefined","Now","FirstOfMonth","FirstBusinessDayOfTheMonth","LastDayOfTheMonth","LastBusinessDayOfMonth","FirstDayOfYear","LastDayOfYear"],"type":"string"},"adjustment":{"format":"int32","type":"integer"},"unit":{"enum":["Undefined","Minute","Hour","Day","BusinessDay","Weeks","Months","Years"],"type":"string"},"relativeToDateTime":{"enum":["Undefined","BeforeOrOn","Before","OnDayOf","AfterOrOn","After","Exactly"],"type":"string"}}},"EffectiveRange":{"type":"object","properties":{"from":{"format":"date-time","type":"string"},"to":{"format":"date-time","type":"string"}}},"IfRequestHeaderExpression":{"required":["headerName","operator"],"type":"object","properties":{"headerName":{"minLength":1,"type":"string"},"operator":{"enum":["Undefined","EqualsCaseSensitive","EqualsCaseInsensitive","NotEqualsCaseSensitive","NotEqualsCaseInsensitive","ContainsCaseSensitive","NotPresentOrNotContainsCaseSensitive"],"type":"string"},"value":{"type":"string"}}},"IfIdentityClaimExpression":{"required":["claimType","claimValueType","operator"],"type":"object","properties":{"claimType":{"type":"string"},"claimValueType":{"type":"string"},"claimIssuer":{"type":"string"},"claimOriginalIssuer":{"type":"string"},"operator":{"enum":["Undefined","EqualsCaseSensitive","EqualsCaseInsensitive","NotEqualsCaseSensitive","NotEqualsCaseInsensitive","ContainsCaseSensitive","NotPresentOrNotContainsCaseSensitive"],"type":"string"},"value":{"type":"string"}}},"IfIdentityScopeExpression":{"required":["scopeName"],"type":"object","properties":{"scopeName":{"minLength":1,"type":"string"}}},"KeyValuePair<String, String>":{"type":"object","properties":{"key":{"type":"string","readOnly":true},"value":{"type":"string","readOnly":true}}},"AttributeExpression":{"required":["attributeName","operator"],"type":"object","properties":{"attributeName":{"minLength":1,"type":"string"},"operator":{"enum":["Undefined","Equals","NotEquals","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","In"],"type":"string"},"textValue":{"type":"string"},"numericValue":{"format":"double","type":"number"}}},"ActionId":{"required":["scope","activity","entity"],"type":"object","properties":{"scope":{"maxLength":100,"minLength":3,"type":"string"},"activity":{"maxLength":25,"minLength":3,"type":"string"},"entity":{"maxLength":25,"minLength":3,"type":"string"}}},"CodeOnlyIdPathDefinition":{"type":"object","properties":{"code":{"type":"string"}}},"FullIdPathDefinition":{"type":"object","properties":{"scope":{"type":"string"},"code":{"type":"string"},"domain":{"type":"string"}}},"ScopeAndCodeIdPathDefinition":{"type":"object","properties":{"scope":{"type":"string"},"code":{"type":"string"}}},"ScopeIdPathDefinition":{"type":"object","properties":{"scope":{"type":"string"}}},"ComplexKeyIdPathDefinition":{"type":"object","properties":{"keys":{"uniqueItems":false,"type":"array","items":{"type":"string"}}}},"AsAtPredicateContract":{"type":"object","properties":{"value":{"type":"string"},"dateTimeOffset":{"format":"date-time","type":"string"}}},"EvaluationRequest":{"description":"Specification for a server side evaluation of entitlement.","required":["request","resource"],"type":"object","properties":{"request":{"$ref":"#/definitions/RequestDetails","description":"Details about the request to be evaluated"},"resource":{"$ref":"#/definitions/ResourceDetails","description":"Details about the resource that is being requested"}}},"RequestDetails":{"description":"The details of the requested evaluation","required":["action"],"type":"object","properties":{"action":{"$ref":"#/definitions/RequestedActionKey","description":"The action that is requested to be performed on the specified resource"},"fromEffectiveDate":{"format":"date-time","description":"The start date for the requested effective date range for the resource (if null, UtcNow)","type":"string"},"toEffectiveDate":{"format":"date-time","description":"The end date for the requested effective date range for the resource (if null, same as from date)","type":"string"},"fromAsAt":{"format":"date-time","description":"The requested AsAt date for the resource (if null, Latest). If specifying a range of AsAt dates, this is the lower bounds.","type":"string"},"toAsAt":{"format":"date-time","description":"Upper bound if specifying a request that requires a range of AsAt dates. This is used if specifying the desire to grant access for a user between an AsAt range.","type":"string"}}},"ResourceDetails":{"description":"Details about the resource being requested that may be pertinent to the entitlement evaluation","required":["id"],"type":"object","properties":{"id":{"$ref":"#/definitions/ResourceId","description":"The identifier of the resource being evaluated"},"attributes":{"description":"Any attributes associated with the resource being requested","type":"object","additionalProperties":{"type":"string"}}}},"RequestedActionKey":{"description":"A fully qualified action identifier","required":["entityCode","scope","activity"],"type":"object","properties":{"entityCode":{"description":"The type of the resource on which the activity would be performed","maxLength":100,"minLength":3,"type":"string"},"scope":{"description":"The scope/provider/vendor of the activity","maxLength":100,"minLength":3,"type":"string"},"activity":{"description":"The identifier of the action to be performed on the resource","maxLength":100,"minLength":3,"type":"string"}}},"ResourceId":{"description":"An identifier of a non-shrine resource.","type":"object","properties":{"complex":{"$ref":"#/definitions/MultiPartResourceId","description":"Specify this type of resource identifier when addressing a resource with a ordered multi-part key"},"scopeCode":{"$ref":"#/definitions/ScopeCodeResourceId","description":"Specify this type of resource identifier when addressing a resource with a scope and a code"},"full":{"$ref":"#/definitions/FullResourceId","description":"Specify this type of resource identifier when addressing a resource with a scope, code and domain"}}},"MultiPartResourceId":{"description":"The identifier for a \"complex key\" or multi-part ordered string identifier","required":["keys"],"type":"object","properties":{"keys":{"description":"The parts of an ordered multi-part resource identifier","uniqueItems":false,"type":"array","items":{"type":"string"}}}},"ScopeCodeResourceId":{"description":"A resource identifier comprised of a scope and a code","required":["scope","code"],"type":"object","properties":{"scope":{"description":"The scope part of the resource identifier","maxLength":100,"minLength":3,"type":"string"},"code":{"description":"The code part of the resource identifier","maxLength":100,"minLength":3,"type":"string"}}},"FullResourceId":{"description":"A resource identifier comprised of a domain, scope and code","required":["scope","code","domain"],"type":"object","properties":{"scope":{"description":"The scope part of the resource identifier","maxLength":100,"minLength":3,"type":"string"},"code":{"description":"The code part of the resource identifier","maxLength":100,"minLength":3,"type":"string"},"domain":{"description":"The domain part of the of the resource identifier","maxLength":100,"minLength":3,"type":"string"}}},"EvaluationResponse":{"description":"The result of an evaluation request","required":["result"],"type":"object","properties":{"result":{"description":"The indicator of the result of the evaluation","enum":["Denied","Granted","DeniedAsLicenceRequired"],"type":"string"},"detailedMessage":{"description":"In the case of the evaluation being denied a message may be returned","type":"string"}}},"PolicyResponse":{"description":"Response object from the policy API","type":"object","properties":{"id":{"$ref":"#/definitions/PolicyId","description":"ID of the policy"},"meta":{"description":"MetaData associated with the policy","type":"object","properties":{"Undefined":{"type":"string"},"UsageToken":{"type":"string"},"DocumentType":{"type":"string"}}},"description":{"description":"Description of what the policy is entitling","type":"string"},"applications":{"description":"Applications to which the policy applies","uniqueItems":false,"type":"array","items":{"type":"string"}},"grant":{"description":"Allow or deny","enum":["Undefined","Allow","Deny"],"type":"string"},"paths":{"description":"Paths that this policy will be applied to","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PathDefinition"}},"for":{"description":"\"For Specification\" for when the policy is to be applied","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ForSpec"}},"if":{"description":"\"If Specification\" for when the policy is to be applied","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/IfExpression"}},"when":{"$ref":"#/definitions/WhenSpec","description":"\"When specification\" for when the policy is to be applied"},"how":{"$ref":"#/definitions/HowSpec","description":"\"How Specification\" for when the policy is to be applied"},"_links":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/Link"}}}},"Link":{"required":["relation","href","method"],"type":"object","properties":{"relation":{"type":"string"},"href":{"type":"string"},"description":{"type":"string"},"method":{"enum":["POST","GET","PATCH","DELETE","PUT"],"type":"string"}}},"PolicyCreationRequest":{"required":["code","grant","paths","when"],"type":"object","properties":{"code":{"description":"Code of the policy being created","maxLength":50,"minLength":3,"type":"string"},"meta":{"description":"Meta data associated with the policy","type":"object","properties":{"Undefined":{"type":"string"},"UsageToken":{"type":"string"},"DocumentType":{"type":"string"}}},"description":{"description":"Description of what the policy will be used for","maxLength":1024,"minLength":0,"type":"string"},"applications":{"description":"Applications this policy is used with","uniqueItems":false,"type":"array","items":{"type":"string"}},"grant":{"description":"Allow or deny","enum":["Undefined","Allow","Deny"],"type":"string"},"paths":{"description":"Paths that this policy will be applied to","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PathDefinition"}},"for":{"description":"\"For Specification\" for when the policy is to be applied","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ForSpec"}},"if":{"description":"\"If Specification\" for when the policy is to be applied","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/IfExpression"}},"when":{"$ref":"#/definitions/WhenSpec","description":"\"When specification\" for when the policy is to be applied"},"how":{"$ref":"#/definitions/HowSpec","description":"\"How Specification\" for when the policy is to be applied"}},"example":{"code":"example-policy","description":"Example policy demonstrating their creation","applications":["LUSID"],"grant":"Allow","paths":[{"idPathDefinition":{"scopeIdPathDefinition":{"scope":"official"},"category":"Identifier","actions":[{"scope":"default","activity":"Read","entity":"Portfolio"},{"scope":"default","activity":"Aggregate","entity":"Portfolio"}],"name":"access-official-scope","description":"Allow readonly access to the 'official' scope"}}],"for":[{"effectiveRange":{"from":"2015-12-25T00:00:00+00:00","to":"2020-12-25T00:00:00+00:00"}},{"asAtRangeForSpec":{"from":{"dateTimeOffset":"2018-01-01T00:00:00+00:00"},"to":{"value":"AsAt=Latest","dateTimeOffset":"0001-01-01T00:00:00+00:00"}}}],"if":[{"ifRequestHeaderExpression":{"headerName":"organisation.specific.group.header","operator":"EqualsCaseInsensitive","value":"special-group"}}],"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"}}},"PolicyExamples.PolicyResponse":{"type":"object","properties":{}},"PolicyUpdateRequest":{"description":"Update policy request","required":["grant","paths","when"],"type":"object","properties":{"meta":{"description":"Meta data associated with the policy","type":"object","properties":{"Undefined":{"type":"string"},"UsageToken":{"type":"string"},"DocumentType":{"type":"string"}}},"description":{"description":"Description of what the policy will be used for","maxLength":1024,"minLength":0,"type":"string"},"applications":{"description":"Applications this policy is used with","uniqueItems":false,"type":"array","items":{"type":"string"}},"grant":{"description":"Allow or deny","enum":["Undefined","Allow","Deny"],"type":"string"},"paths":{"description":"Paths that this policy will be applied to","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PathDefinition"}},"for":{"description":"\"For Specification\" for when the policy is to be applied","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/ForSpec"}},"if":{"description":"\"If Specification\" for when the policy is to be applied","uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/IfExpression"}},"when":{"$ref":"#/definitions/WhenSpec","description":"\"When specification\" for when the policy is to be applied"},"how":{"$ref":"#/definitions/HowSpec","description":"\"How Specification\" for when the policy is to be applied"}}},"PolicyCollectionResponse":{"type":"object","properties":{"id":{"$ref":"#/definitions/PolicyCollectionId"},"policyIds":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyId"}},"attributes":{"type":"object","additionalProperties":{"type":"object"}},"collectionIds":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyCollectionId"}},"_links":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/Link"}}}},"PolicyCollectionId":{"required":["code"],"type":"object","properties":{"scope":{"maxLength":100,"minLength":3,"type":"string"},"code":{"maxLength":50,"minLength":3,"type":"string"}}},"PolicyCollectionCreationRequest":{"required":["code"],"type":"object","properties":{"code":{"maxLength":50,"minLength":3,"type":"string"},"policyIds":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyId"}},"attributes":{"type":"object","additionalProperties":{"type":"object"}},"collectionIds":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyCollectionId"}}},"example":{"code":"example-policy-collection","policyIds":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"attributes":{},"collectionIds":[{"scope":"default","code":"CompanyEmployeeAccess"}]}},"PolicyCollectionExamples.PolicyCollectionResponse":{"type":"object","properties":{}},"PolicyCollectionUpdateRequest":{"type":"object","properties":{"policyIds":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyId"}},"attributes":{"type":"object","additionalProperties":{"type":"object"}},"collectionIds":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyCollectionId"}}}},"RoleResponse":{"required":["id","roleHierarchyIndex","resource","when","permission"],"type":"object","properties":{"id":{"$ref":"#/definitions/RoleId"},"roleHierarchyIndex":{"format":"int32","type":"integer"},"description":{"type":"string"},"resource":{"$ref":"#/definitions/RoleResourceRequest"},"when":{"$ref":"#/definitions/WhenSpec"},"permission":{"type":"string"},"limit":{"$ref":"#/definitions/RoleIdentifier"},"_links":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/Link"}}}},"RoleResourceRequest":{"type":"object","properties":{"nonTransitiveSupervisorRoleResource":{"$ref":"#/definitions/NonTransitiveSupervisorRoleResource"},"policyIdRoleResource":{"$ref":"#/definitions/PolicyIdRoleResource"}}},"RoleIdentifier":{"type":"object","properties":{"scope":{"type":"string"},"code":{"type":"string"},"complexKeys":{"uniqueItems":false,"type":"array","items":{"type":"string"}}}},"NonTransitiveSupervisorRoleResource":{"type":"object","properties":{"roleIdentifiers":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/RoleIdentifier"}}}},"PolicyIdRoleResource":{"type":"object","properties":{"policyIdentifiers":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyId"}},"policyCollectionIdentifiers":{"uniqueItems":false,"type":"array","items":{"$ref":"#/definitions/PolicyCollectionId"}}}},"RoleCreationRequest":{"required":["code","resource","when"],"type":"object","properties":{"code":{"maxLength":50,"minLength":3,"type":"string"},"description":{"type":"string"},"resource":{"$ref":"#/definitions/RoleResourceRequest"},"when":{"$ref":"#/definitions/WhenSpec"}},"example":{"code":"example-organisation-role-id","description":"This is an example role to demonstrate their creation","resource":{"policyIdRoleResource":{"policyIdentifiers":[{"scope":"default","code":"official-portfolios-read-only"},{"scope":"default","code":"desk-portfolios"}],"policyCollectionIdentifiers":[{"scope":"default","code":"CompanyEmployeeAccess"}]}},"when":{"activate":"2016-08-31T18:00:00+00:00","deactivate":"2020-08-31T18:00:00+00:00"}}},"RoleExamples.RoleResponse":{"type":"object","properties":{}},"RoleUpdateRequest":{"description":"Role update does not allow the changing of the id","required":["resource","when"],"type":"object","properties":{"description":{"type":"string"},"resource":{"$ref":"#/definitions/RoleResourceRequest"},"when":{"$ref":"#/definitions/WhenSpec"}}}},"securityDefinitions":{"oauth2":{"flow":"implicit","authorizationUrl":"https://lusid.okta.com/oauth2/aus5a776yendDqtEq2p6/v1/authorize","type":"oauth2","description":"OAuth2 Implicit Grant"}},"security":[{"oauth2":[]}],"tags":[]}